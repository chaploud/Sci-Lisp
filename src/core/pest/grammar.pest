COMMENT = _{ ";" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
WHITESPACE = _{ " " | "\t" | "\r" | "\n" | "," }

prefix_char = _{ "#" | "'" | "`" | "~" | "~@" | ":" | "@" | "\\" }
special_char = _{ "!" | "$" | "%" | "&" | "-" | "=" | "^" | "|" | "+" | "*" | "<" | ">" | "?" | "_" | "/" }
separation_char = _{ "." }

identifier = _{ ( ASCII_ALPHA | special_char) ~ (ASCII_ALPHANUMERIC | special_char)* }

nil = @{ "nil" }
bool = @{ "true" | "false" }
f64 = @{int ~ "." ~ int? ~ exp? |                    // +0_2.0_2e-2, 2.
        int ~ exp |                                  // -0_2e+02
        pm? ~ "." ~ digit ~ (digit | "_")* ~ exp? |  // -.0_0e5
        nan |
        inf }
i64 = @{ int ~ !("." | ^"e") }
  int = _{ pm? ~ digit ~ (digit | "_")* }
  digit = _{ ASCII_DIGIT }
  pm = _{ ("-" | "+") }
  exp = _{ ^"e" ~ i64 }
  nan = _{ "nan" }
  inf = _{ pm? ~ "inf" }
symbol = @{ identifier }
keyword = @{ ":" ~ identifier}
regex = { "#\"" ~ string_inner ~ "\"" }
string = ${ "\"" ~ string_inner ~ "\"" }
  string_inner = @{ char* }
  char = { !("\"" | "\\") ~ ANY | "\\" ~ ANY }

list = { "(" ~ expr* ~ ")" }
vector = { "[" ~ expr* ~ "]" }
map = { "{" ~ map_inner ~ "}" }
  map_inner = { expr* ~ expr* }
set = { "#{" ~ expr* ~ "}" }

quote = { "'" ~ expr }
syntax_quote = { "`" ~ expr }
unquote = { "~" ~ expr }
unquote_splicing = { "~@" ~ expr }
expand = { "@" ~ expr }

expr = _{ nil | bool | i64 | f64 | symbol | keyword | regex | string
        | list | vector | map | set
        | quote | syntax_quote | unquote | unquote_splicing | expand }

scilisp = { SOI ~ expr* ~ EOI}

// TODO:
// (')quote
// (`)backquote
// (~)unquote
// (~@)unquote-splicing
// (@)expand
// (.)dot
// ([0:2])([-1])slice
